buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.2.RELEASE'
		gradleDockerVersion = '1.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "docker"

group = 'org.common.marvel'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.corundumstudio.socketio:netty-socketio:1.7.12'

	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

task buildDocker(type: Docker) {
	baseImage = "openjdk:8-jre-slim"
	tag = "common-marvel/mafia-backend-mono"
	addFile {
		from jar
		rename { "app.jar" }
	}
	entryPoint(['java', '-Xms1g', '-Xmx1g', '-jar', 'app.jar'])
}
buildDocker.dependsOn(build)
